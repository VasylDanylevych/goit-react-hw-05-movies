{"version":3,"file":"static/js/247.f59286a0.chunk.js","mappings":"+PAIMA,EAAY,IAAIC,EAAAA,EAEP,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBR,EAAUS,aAAaN,GAF9C,OAEUO,EAFV,OAGIH,EAASG,EAAKC,MAHlB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,KAGF,0BACE,wBACGG,GACCA,EAAMS,KAAI,SAAAJ,GAAI,OACZ,2BACE,gBACEK,IACEL,EAAKM,aAAL,yCACsCN,EAAKM,cAD3C,+CAIFC,IAAI,eACJC,QAAQ,OACRC,MAAO,OAET,wBAAKT,EAAKU,QACV,uCAAeV,EAAKW,eAZbX,EAAKY,GADF,OAmBvB,C,gHC5CKC,EAAM,gCACNC,EAAU,mCAEKxB,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CA2CnB,OA3CmBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,mBAAAA,MAAAA,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MACnB,6GAE2ByB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACeC,IAH1C,cAEUE,EAFV,yBAKWA,EAASjB,MALpB,gCAOIE,QAAQgB,MAAR,MAPJ,2GADmB3B,IACnB,iEAWA,WAAuB4B,GAAvB,gGAE2BH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACSC,EADT,kBAC0BI,EAD1B,YAF3B,cAEUF,EAFV,yBAKWA,EAASjB,MALpB,gCAOIE,QAAQgB,MAAR,MAPJ,4GAXA,IAWA,gEAWA,WAAsBL,GAAtB,gGAE2BG,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAyBD,EAAzB,oBAAuCE,IAFlE,cAEUE,EAFV,yBAGWA,EAASjB,MAHpB,gCAKIE,QAAQgB,MAAR,MALJ,4GAXA,IAWA,6DASA,WAAmBL,GAAnB,gGAE2BG,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACND,EADM,4BACgBE,IAH3C,cAEUE,EAFV,yBAKWA,EAASjB,MALpB,gCAOIE,QAAQgB,MAAR,MAPJ,4GATA,IASA,gEAWA,WAAsBL,GAAtB,gGAE2BG,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACND,EADM,4BACgBE,IAH3C,cAEUE,EAFV,yBAKWA,EAASjB,MALpB,gCAOIE,QAAQgB,MAAR,MAPJ,4GAXA,MAWA,EA3CmB3B,E","sources":["components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MoviesApi from 'services/Api';\n\nconst moviesApi = new MoviesApi();\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    async function fetchCasts() {\n      try {\n        const data = await moviesApi.getMovieCast(movieId);\n        setCasts(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchCasts();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {casts &&\n          casts.map(cast => (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"profile path\"\n                loading=\"lazy\"\n                width={120}\n              />\n              <h4>{cast.name}</h4>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51710d149e771e558fc72465c85784a4';\n\nexport default class MoviesApi {\n  async getPopularMovies() {\n    try {\n      const response = await axios.get(\n        `${URL}trending/movie/day?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMoviesOnQuery(query) {\n    try {\n      const response = await axios.get(\n        `${URL}search/movie?api_key=${API_KEY}&query=${query}&page=1`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieDetails(id) {\n    try {\n      const response = await axios.get(`${URL}movie/${id}?api_key=${API_KEY}`);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieCast(id) {\n    try {\n      const response = await axios.get(\n        `${URL}movie/${id}/credits?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getMovieReviews(id) {\n    try {\n      const response = await axios.get(\n        `${URL}movie/${id}/reviews?api_key=${API_KEY}`\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\n"],"names":["moviesApi","MoviesApi","Cast","movieId","useParams","useState","casts","setCasts","useEffect","getMovieCast","data","cast","console","log","fetchCasts","map","src","profile_path","alt","loading","width","name","character","id","URL","API_KEY","axios","response","error","query"],"sourceRoot":""}